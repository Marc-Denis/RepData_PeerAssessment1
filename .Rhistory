}
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point","smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displnhwy,data=mpg,facets=.~drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~., binwidth=2)
q()
library(swirl)
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_points(color="pink",size=4,alpha=1/2)
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,color=aes(drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line+(ylim(-3,3))
g+geom_line()+(ylim(-3,3))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut())
qplot(price,data=diamonds,geom="density",color=cut
)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut,facets=.~cut)+geom_smooth(method="lm")
g<-ggplot(data=diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(data=diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
q(n)
library(lattice)
?trellis.par.set
?par()
library(datasets)
data(airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
q()
library(swirl)
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple",pch=3,cex=2,lwd=2))
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2))
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green",pch=3,cex=3,lwd=3))
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% matv
matu %*% diag %*% t(matv)
scale(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1] %*% t(svd1$v[,1]))*svd$d[1]
a1<-(svd1$u[,1] %*% t(svd1$v[,1]))*svd1$d[1]
a1<-svd1$u[,1] %*% t(svd1$v[,1])*svd1$d[1]
myImage(a1)
a2<-svd1$u[1:2] %*% svd1$d[1:2] %*% t(svd1$v[1:2])
a2<-svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2<-svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5<-svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub1[,12])
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclust(mdist)
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(c(sub1[,10:12],maxCon))
mdist<-dist(sub1[,10:12],maxCon)
mdist<-dist(c(sub1[,10:12],maxCon))
mdist<-dist(c(sub1[10:12],maxCon))
b
mdist<-blah
mdist<-1+1
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,-(562:563)],centers=6)
kClust<-kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
table(kClust$cluster,sub1$activity,nstart=100)
kClust<-table(kClust$cluster,sub1$activity,nstart=100)
kClust<-kmeans(sub1[,-c(562,563)],centers=6,nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[laying,1:12],pch=19,ylab="Walkdown" Cluster")
plot(kClust$centers[laying,1:12],pch=19,ylab="Walkdown Cluster")
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
q()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnames,'|',fixed=TRUE)
cnames<-strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log(x0),log(x1))
boxplot(log10(x0),log10(x1))
negative<-"x1<0"
negative<-x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,pm0$County.Code=="36" & pm0$county.site %in% both)
cnt0<-subset(pm0,County.Code=="36" & county.site %in% both)
cnt0<-subset(pm0,County.Code==36 & county.site %in% both)
cnt0<-subset(pm0,State.Code==36 & county.site %in% both)
cnt1<-subset(pm1,State.Code==36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.Code==63 & Site.ID==2008)
pm1sub<-subset(cnt1,County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub,na.rm=TRUE),lwd=2)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm = TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3])
)
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x<mrg$mean.y,]
setwd(".\Coursera\Course 4-4")
setwd("./Coursera/Course 4-4")
#Read pollution data
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(SCC)
table(SCC$Data.Category)
vehi<-grepl(pattern='vehicle.',x=SCC$Short.Name,ignore.case = TRUE)
table(vehi)
vehi<-grepl(pattern='vehicle',x=SCC$Short.Name,ignore.case = TRUE)
table(vehi)
library(dplyr)
SCCroad<-filter(data=SCC,Data.Category=='Onroad')
SCCroad<-filter(SCC,Data.Category=='Onroad')
distinct(SCCroad,Data.Category)
distinct(SCCroad,SCC.LevelTwo)
distinct(SCCroad,SCC.Level.Two)
distinct(SCC,SCC.Level.Two)
distinct(SCCroad,SCC.Level.Two)
vehi<-grepl(pattern='vehicle',x=SCC$SCC.Level.Two,ignore.case = TRUE)
table(vehi)
filter(SCC,vehi==TRUE)
SCCvehi<-filter(SCC,vehi==TRUE)
View(SCCvehi)
distinct(SCCvehi,SCC.Level.Two)
vehi<-grepl(pattern='vehicle',x=SCC$SCC.Level.Two,ignore.case = TRUE)
shortlist<-subset(SCC,vehi==TRUE)
#Subsetting the NEI dataset according to the source codes obtained above and restraining it to Baltimore.
motor_vehicle_balti<-NEI[NEI$fips=='24510' & NEI$SCC %in% shortlist$SCC,]
motor_vehicle_balti_sum <- tapply(motor_vehicle_balti$Emissions, motor_vehicle_balti$year, sum)
barplot(motor_vehicle_balti_sum, main='Motor vehicles-related emissions in Baltimore')
#Initialisation of the PNG file graphics device
png("plot5.png",480,480,"px")
#Creation of the required plot
barplot(motor_vehicle_balti_sum, main='Motor vehicles-related emissions in Baltimore')
#Closure of the graphics device
dev.off()
motor_vehicle_BLA<-NEI[(NEI$fips=='24510' | NEI$fips=='06037') & NEI$SCC %in% shortlist$SCC,]
motor_vehicle_BLA_sum<-summarise(group_by(motor_vehicle_BLA,fips,year),sum(Emissions)) %>% mutate(City=factor(ifelse(fips=='06037','Los Angeles','Baltimore')))
qplot(x=year,y=motor_vehicle_BLA_sum[,3],data=motor_vehicle_BLA_sum,col=City,ylab='Emissions',geom=c('line','point'),main='Evolution of motor vehicles emissions')
library(ggplot2)
qplot(x=year,y=motor_vehicle_BLA_sum[,3],data=motor_vehicle_BLA_sum,col=City,ylab='Emissions',geom=c('line','point'),main='Evolution of motor vehicles emissions')
png("plot6.png",480,480,"px")
#Creation of the required plot
qplot(x=year,y=motor_vehicle_BLA_sum[,3],data=motor_vehicle_BLA_sum,col=City,ylab='Emissions',geom=c('line','point'),main='Evolution of motor vehicles emissions')
#Closure of the graphics device
dev.off()
knitr::opts_chunk$set(echo = TRUE)
x<-1+1
x
setwd(dir='C:\Users\denis\OneDrive\Documents\Coursera\Course 5-2\RepData_PeerAssessment1')
setwd(dir='C:/Users/denis/OneDrive/Documents/Coursera/Course 5-2/RepData_PeerAssessment1')
unzip("activity.zip")
opts_chunk$set(echo=TRUE, root.dir='C:/Users/denis/OneDrive/Documents/Coursera/Course 5-2/RepData_PeerAssessment1')
knit_with_parameters('~/Coursera/Course 5-2/PA1_template.Rmd')
unzip("activity.zip")
activity<-read.csv("activity.csv")
setwd(dir='C:/Users/denis/OneDrive/Documents/Coursera/Course 5-2/RepData_PeerAssessment1')
activity<-read.csv("activity.csv")
getwd
getwd()
dir
dir()
activity<-read.csv("activity.csv")
str(activity)
summary(activity)
View(activity)
distinct(activity,interval)
str(activity)
library(lubridate)
hm(activity$interval)
ifelse(1+1==2;'Vrai!','Faux')
ifelse(1+1==2,'Vrai!','Faux')
ifelse(1+1==3,'Vrai!','Faux')
ifelse(1+1==3,'Vrai!',ifelse(2+2==4,'Vraiment vrai','Vraiment faux'))
ifelse(1+1==3,'Vrai!',ifelse(2+2==1,'Vraiment vrai','Vraiment faux'))
activity2<-mutate(activity,interval_hours=ifelse(interval<100,as.character('00',interval),ifelse(interval<1000,as.character('0',interval),as.character(interval))))
View(activity2)
activity2<-mutate(activity,interval_hours=ifelse(interval<100,as.character(c('00',interval)),ifelse(interval<1000,as.character(c('0',interval)),as.character(interval))))
View(activity2)
'test'+'test'
c('test','test')
activity2<-mutate(activity,interval_hours=ifelse(interval<100,as.character(paste('00',interval)),ifelse(interval<1000,as.character(paste('0',interval)),as.character(interval))))
View(activity2)
activity2<-mutate(activity,interval_hours=ifelse(interval<10,paste0('000',interval,ifelse(interval<100,as.character(paste0('00',interval)),ifelse(interval<1000,as.character(paste0('0',interval)),as.character(interval)))))
)
activity2<-mutate(activity,interval_hours=ifelse(interval<10,paste0('000',interval),ifelse(interval<100,as.character(paste0('00',interval)),ifelse(interval<1000,as.character(paste0('0',interval)),as.character(interval))))
)
View(activity2)
activity2<-mutate(activity,interval_hours=ifelse(interval<10,paste0('000',interval),ifelse(interval<100,paste0('00',interval),ifelse(interval<1000,paste0('0',interval),as.character(interval))))
)
activity2<-mutate(activity,interval_hours=ifelse(interval<10,paste0('000',interval),ifelse(interval<100,paste0('00',interval),ifelse(interval<1000,paste0('0',interval),as.character(interval)))))
View(activity2)
activity2<-mutate(activity,interval_hours=hm(ifelse(interval<10,paste0('000',interval),ifelse(interval<100,paste0('00',interval),ifelse(interval<1000,paste0('0',interval),as.character(interval))))))
?hm
activity2<-mutate(activity,interval_hours=hm(ifelse(interval<10,paste0('00:0',interval),ifelse(interval<100,paste0('00:',interval),ifelse(interval<1000,paste0('0',interval),as.character(interval))))))
activity2<-mutate(activity,interval_hours=ifelse(interval<10,paste0('000',interval),ifelse(interval<100,paste0('00',interval),ifelse(interval<1000,paste0('0',interval),as.character(interval)))))
View(activity2)
activity2 %>% mutate(interval_hours_def=hm(paste(substring(interval_hours,1,2)),substring(interval_hours,3,2),sep=':'))
View(activity2)
activity2 %>% mutate(interval_hours_def=substring(interval_hours,1,2))
activity2<-mutate(activity2,interval_hours_def=substring(interval_hours,1,2))
View(activity2)
activity2<-mutate(activity2,interval_hours_def=paste0(substring(interval_hours,1,2),':',substring(interval_hours,3,2)))
View(activity2)
activity2<-mutate(activity2,interval_hours_def=paste0(substring(interval_hours,1,2),':',substring(interval_hours,3,4)))
View(activity2)
activity2<-mutate(activity2,hm(interval_hours_def=paste0(substring(interval_hours,1,2),':',substring(interval_hours,3,4))))
View(activity2)
activity2<-mutate(activity2,interval_hours_def=hm(paste0(substring(interval_hours,1,2),':',substring(interval_hours,3,4))))
View(activity2)
View(activity2)
activity2<-mutate(activity2,interval_hours_def=hm(paste0(substring(interval_hours,1,2),':',substring(interval_hours,3,4))))
activity2<-mutate(activity,interval_hours=ifelse(interval<10,paste0('000',interval),ifelse(interval<100,paste0('00',interval),ifelse(interval<1000,paste0('0',interval),as.character(interval)))))
activity2<-mutate(activity2,interval_hours_def=hm(paste0(substring(interval_hours,1,2),':',substring(interval_hours,3,4))))
stepsperday<-summarise(activity,date,sum(steps,na.rm=TRUE))
stepsperday<-summarise(group_by(activity,date),sum(steps,na.rm=TRUE))
View(stepsperday)
stepsperday<-summarise(group_by(activity,date),daily_steps=sum(steps,na.rm=TRUE))
View(stepsperday)
hist(stepsperday)
hist(stepsperday$daily_steps)
hist(stepsperday$date)
hist(stepsperday$daily_steps)
hist(stepsperday$daily_steps, xlab='Total daily steps', ylab='Number of days', main='Total number of steps taken each day')
hist(stepsperday$daily_steps, freq=10, xlab='Total daily steps', ylab='Number of days', main='Total number of steps taken each day')
?hist
hist(stepsperday$daily_steps, breaks=10, xlab='Total daily steps', ylab='Number of days', main='Total number of steps taken each day')
hist(stepsperday$daily_steps, col='darkblue', xlab='Total daily steps', ylab='Number of days', main='Total number of steps taken each day')
hist(stepsperday$daily_steps, col='orange', xlab='Total daily steps', ylab='Number of days', main='Total number of steps taken each day')
summary(stepsperday$daily_steps)
stepsperinterval<-summarise(group_by(activity,interval_hours_formatted),interval_steps=mean(steps,na.rm=TRUE))
activity<-mutate(activity,interval_hours=ifelse(interval<10,paste0('000',interval),ifelse(interval<100,paste0('00',interval),ifelse(interval<1000,paste0('0',interval),as.character(interval))))) %>% mutate(interval_hours_formatted=hm(paste0(substring(interval_hours,1,2),':',substring(interval_hours,3,4))))
stepsperinterval<-summarise(group_by(activity,interval_hours_formatted),interval_steps=mean(steps,na.rm=TRUE))
View(stepsperinterval)
test<-group_by(activity,interval_hours_formatted)
View(test)
test<-group_by(activity,interval_hours)
View(test)
rm(NEI)
rm(SCC)
rm(SCCroad)
rm(SCCvehi)
rm(shortlist)
rm(motor_vehicle_balti)
rm(motor_vehicle_balti_sum)
rm(motor_vehicle_BLA)
rm(motor_vehicle_BLA_sum)
rm(vehi)
rm(x)
rm(activity2)
summarise(group_by(activity,interval),interval_steps=mean(steps,na.rm=TRUE)
)
summarise(group_by(activity,interval_hours),interval_steps=mean(steps,na.rm=TRUE)
)
summarise(group_by(activity,interval_hours_formatted),interval_steps=mean(steps,na.rm=TRUE))
stepsperinterval<-summarise(group_by(activity,interval_hours),interval_steps=mean(steps,na.rm=TRUE))
View(stepsperinterval)
sum(stepsperinterval$interval_steps)
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l'))
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily pattern',xlab='Time frame',ylab='Number of steps',col='green'))
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily pattern',xlab='Time frame',ylab='Number of steps',col='emerald'))
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen'))
?plot
with(stepsperinterval,plot(x=as.character(interval_hours),y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen'))
filter(stepsperinterval,interval_steps=max(interval_steps))
filter(stepsperinterval,interval_steps==max(interval_steps))
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'))
me series plot}
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'),axis(1,at=seq_along(stepsperinterval$interval_hours)))
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'),axis(1,at=seq_along(stepsperinterval$interval_hours),las=2))
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'))
axis(1,at=seq_along(stepsperinterval$interval_hours),las=2)
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'))
axis(1,at=seq_along(stepsperinterval$interval_hours))
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'))
axis(1,at=seq(0,2300))
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'))
axis(1,at=seq(0,2300),by=100)
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'))
axis(1,at=seq(0,2300,by=100))
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'))
axis(1,at=seq(0,2300,by=100),las=2)
?axis
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'))
axis(1,at=seq(0,2300,by=100),las=3)
with(stepsperinterval,plot(x=interval_hours,y=interval_steps,type='l',main='Daily activity pattern',xlab='Time frame',ylab='Number of steps',col='darkgreen',xaxt='n'))
axis(1,at=seq(0,2300,by=100),las=1)
count(activity,steps==NA)
count(activity,is.na(steps))
count(activity,is.na(steps)==TRUE)
activityj<-join(activity,stepsperinterval)
library(plyr)
activityj<-join(activity,stepsperinterval)
View(activityj)
View(stepsperinterval)
library(knitr)
library(lubridate)
library(plyr)
library(dplyr)
activity_new<-join(activity,stepsperinterval)
activity_new %>% mutate(steps_filled=ifelse(is.na(steps)==TRUE,interval_steps,steps)) %>% select(-interval_steps)
View(activity_new)
activity_new %>% mutate(steps_filled=ifelse(is.na(steps)==TRUE,interval_steps,steps))
activity_new<-mutate(activity_new,steps_filled=ifelse(is.na(steps)==TRUE,interval_steps,steps))
View(activity_new)
View(activity_new)
activity_new<-select(activity_new,-c(interval_steps))
activity_new<-select(activity_new,-interval_steps)
activity_new<-join(activity,stepsperinterval)
activity_new<-mutate(activity_new,steps_filled=ifelse(is.na(steps)==TRUE,interval_steps,steps))
activity_new<-select(activity_new,-interval_steps)
rm(activityj)
rm(test)
stepsperday_new<-summarise(group_by(activity_new,date),daily_steps_new=sum(steps_filled))
View(stepsperday_new)
View(activity_new)
View(activity_new)
stepsperday_new<-summarise(group_by(activity_new,date),daily_steps_new=sum(steps_filled))
hist(stepsperday_new$daily_steps_new, col='orange', xlab='Total daily steps', ylab='Number of days', main='Total number of steps taken each day')
mean_stepsperday_new<-mean(stepsperday_new$daily_steps_new)
median_stepsperday_new<-median(stepsperday_new$daily_steps_new)
mean_stepsperday_new
median_stepsperday_new
View(stepsperday_new)
stepsperday_new<-summarise(group_by(activity_new,date),daily_steps_new=sum(steps_filled))
stepsperday2<-summarise(group_by(activity,date),daily_steps=sum(steps,na.rm=TRUE))
activity$date
as.factor(activity$date)
stepsperday2<-summarise(group_by(activity,as.factor(date)),daily_steps=sum(steps,na.rm=TRUE))
